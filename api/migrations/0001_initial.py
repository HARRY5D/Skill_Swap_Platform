# Generated by Django 5.2.3 on 2025-07-12 06:32

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, validators=[django.core.validators.MinLengthValidator(2)])),
                ('description', models.TextField(blank=True)),
                ('category', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, max_length=500)),
                ('location', models.CharField(blank=True, max_length=100)),
                ('phone', models.CharField(blank=True, max_length=15)),
                ('availability', models.CharField(choices=[('weekdays', 'Weekdays'), ('weekends', 'Weekends'), ('evenings', 'Evenings'), ('mornings', 'Mornings'), ('all_day', 'All_Day')], default='weekends', max_length=20)),
                ('is_public', models.BooleanField(default=True)),
                ('visibility', models.CharField(choices=[('public', 'Public'), ('private', 'Private'), ('friends_only', 'Friends_Only')], default='public', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
                ('skills_offered', models.ManyToManyField(blank=True, related_name='users_offering', to='api.skill')),
                ('skills_wanted', models.ManyToManyField(blank=True, related_name='users_wanting', to='api.skill')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SwapRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('rejected', 'Rejected'), ('deleted', 'Deleted')], default='pending', max_length=20)),
                ('message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_swaps', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_swaps', to=settings.AUTH_USER_MODEL)),
                ('skill_offered', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='swaps_offering', to='api.skill')),
                ('skill_requested', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='swaps_requesting', to='api.skill')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['sender', 'status'], name='api_swapreq_sender__688447_idx'), models.Index(fields=['receiver', 'status'], name='api_swapreq_receive_d2548b_idx'), models.Index(fields=['status'], name='api_swapreq_status_a29d12_idx')],
                'unique_together': {('sender', 'receiver', 'status')},
            },
        ),
    ]
